apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-commander
  namespace: ${namespace}
  annotations:
    container.apparmor.security.beta.kubernetes.io/redis-commander: runtime/default
    container.security.alpha.kubernetes.io/redis-commander: runtime/default
    runterrascan.io/skip: "[{\"rule\": \"AC_K8S_0078\", \"comment\": \"Container requirement\"}]"
    runterrascan.io/skip: "[{\"rule\": \"AC_K8S_0087\", \"comment\": \"Container requirement\"}]"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-commander
  template:
    metadata:
      labels:
        app: redis-commander
        tier: backend
    spec:
      automountServiceAccountToken: false
      containers:
        - name: redis-commander
          image: rediscommander/redis-commander
          imagePullPolicy: Always
          env:
            - name: REDIS_HOST
              value: "redis-master"
            - name: REDIS_PASSWORD
              value: "${password}"
            - name: K8S_SIGTERM
              value: "1"
          ports:
          - name: redis-commander
            containerPort: 8081
          livenessProbe:
            httpGet:
              path: /favicon.png
              port: 8081
            initialDelaySeconds: 10
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 15m
              memory: 105M
            limits:
              cpu: 15m
              memory: 105M
          securityContext:
            runAsNonRoot: true
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
