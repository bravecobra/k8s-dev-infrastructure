extensions:
  health_check:
  pprof:
  zpages:

receivers:
  otlp:
    protocols:
      grpc:
      http:
  # Get the metrics of the otel-collector itself
  hostmetrics:
    collection_interval: 10s
    scrapers:
      cpu:
        metrics:
          system.cpu.utilization:
            enabled: true
      disk:
      filesystem:
        metrics:
          system.filesystem.utilization:
            enabled: true
      load:
      memory:
        metrics:
          system.memory.utilization:
            enabled: true
      network:
      processes:
      paging:
        metrics:
          system.paging.utilization:
            enabled: true
      process:
  # docker_stats:
  #   collection_interval: 2s
  #   timeout: 20s
  #   api_version: 1.24
  #   container_labels_to_metric_labels:
  #     com.docker.compose.service: service.name
  #   provide_per_core_cpu_metrics: true
processors:
  memory_limiter:
    check_interval: 1s
    limit_mib: 1000
    spike_limit_mib: 200
  batch:
    # Datadog APM Intake limit is 3.2MB. Let's make sure the batches do not go over that.
    send_batch_max_size: 1000
    send_batch_size: 100
    timeout: 10s
  resource:
    attributes:
      - key: host.id
        from_attribute: host.name
        action: upsert
  cumulativetodelta:
    include:
      metrics:
        - system.network.io
        - system.disk.operations
        - system.network.dropped
        - system.network.packets
        - process.cpu.time
      match_type: strict
  resourcedetection:
    detectors: [system, env, docker]
  k8sattributes:
    auth_type: "serviceAccount"
    passthrough: false
    filter:
      node_from_env_var: KUBE_NODE_NAME
    extract:
      metadata:
        - k8s.pod.name
        - k8s.pod.uid
        - k8s.deployment.name
        - k8s.cluster.name
        - k8s.namespace.name
        - k8s.node.name
        - k8s.pod.start_time
    pod_association:
      - from: resource_attribute
        name: k8s.pod.uid
exporters:
  logging:
    loglevel: debug
  datadog:
    hostname: otel-collector-gateway
    api:
      site: ${DD_SITE}
      key: ${DD_API_KEY}
    metrics:
      resource_attributes_as_tags: false
      instrumentation_scope_metadata_as_tags: false

service:
  extensions: [pprof, zpages, health_check]
  telemetry:
    logs:
      level: "debug"
  pipelines:
    metrics:
      receivers: [hostmetrics, otlp] #docker_stats
      processors: [resourcedetection, k8sattributes, resource, cumulativetodelta , batch]
      exporters: [datadog]
    traces:
      receivers: [otlp]
      processors: [ resourcedetection, k8sattributes, resource, batch]
      exporters: [datadog]
    logs:
      receivers: [otlp]
      processors: [ resourcedetection, k8sattributes, resource, batch]
      exporters: [datadog]
