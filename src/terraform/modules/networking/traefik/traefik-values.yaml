# Override of: https://github.com/traefik/traefik-helm-chart/blob/master/traefik/values.yaml

dashboard:
  enabled: true
  domain: traefik.infrastructure.${domain-name}
additionalArguments:
  - "--serversTransport.insecureSkipVerify=true"
  - "--providers.kubernetesingress=true"
  - "--providers.kubernetesingress.ingressendpoint"
  - "--providers.kubernetesingress.ingressendpoint.ip=${loadbalancer-ip}"
# #%{ if use_metrics == true }
#   - "--metrics.prometheus=${use_metrics}"
#   - "--entryPoints.metrics.address=:9100"
# #%{ endif }
#%{ if use_tracing == true }
  - "--tracing.jaeger=true"
  - "--tracing.jaeger.samplingServerURL=http://jaeger-agent.jaeger:5778/sampling"
  - "--tracing.jaeger.localAgentHostPort=jaeger-agent.jaeger:6831"
#%{ endif }
#%{ if expose_jaeger == true }
  - "--entryPoints.jaeger.address=:6831/udp"
#%{ endif }
#%{ if expose_azurite == true }
  - "--entryPoints.azuriteblobs.address=:10000"
  - "--entryPoints.azuritequeues.address=:10001"
  - "--entryPoints.azuritetables.address=:10002"
#%{ endif }
#%{ if expose_seq == true }
  - "--entryPoints.seq-ingestion.address=:5341"
#%{ endif }
#%{ if expose_opentelemetry == true }
  - "--entryPoints.otel-grpc.address=:4317"
  - "--entryPoints.otel-http.address=:4318"
#%{ endif }
#%{ if expose_loki == true }
  - "--entryPoints.loki.address=:3100"
#%{ endif }
#%{ if expose_rabbitmq == true }
  - "--entryPoints.rabbitmq.address=:5672"
#%{ endif }
#%{ if expose_mysql == true }
  - "--entryPoints.mysql.address=:3306"
#%{ endif }
#%{ if expose_postgres == true }
  - "--entryPoints.postgres.address=:5432"
#%{ endif }
#%{ if expose_mssql == true }
  - "--entryPoints.mssql.address=:1433"
#%{ endif }
#%{ if expose_mariadb == true }
  - "--entryPoints.mariadb.address=:3307"
#%{ endif }
#%{ if expose_mongodb == true }
  - "--entryPoints.mongodb.address=:27017"
#%{ endif }
#%{ if expose_oracle == true }
  - "--entryPoints.oracle.address=:1521"
#%{ endif }


entryPoints:
# #%{ if use_metrics == true }
#   metrics:
#     address: ":9100"
# #%{ endif }
#%{ if expose_azurite == true }
  azuriteblobs:
    address: ":10000"
  azuritequeues:
    address: ":10001"
  azuritetables:
    address: ":10002"
#%{ endif }
#%{ if expose_seq == true }
  seg-ingestion:
    address: ":5341"
#%{ endif }
#%{ if expose_opentelemetry == true }
  otel-grpc:
    address: ":4317"
  otel-http:
    address: ":4318"
#%{ endif }
#%{ if expose_loki == true }
  loki:
    address: ":3100"
#%{ endif }
#%{ if expose_rabbitmq == true }
  rabbitmq:
    address: ":5672"
#%{ endif }
#%{ if expose_jaeger == true }
  jaeger:
    address: ":6831"
#%{ endif }
#%{ if expose_mysql == true }
  mysql:
    address: ":3306"
#%{ endif }
#%{ if expose_mariadb == true }
  mariadb:
    address: ":3307"
#%{ endif }
#%{ if expose_postgres == true }
  postgres:
    address: ":5432"
#%{ endif }
#%{ if expose_mssql == true }
  mssql:
    address: ":1433"
#%{ endif }
#%{ if expose_mongodb == true }
  mongodb:
    address: ":27017"
#%{ endif }
#%{ if expose_oracle == true }
  oracle:
    address: ":1521"
#%{ endif }

deployment:
  labels:
    app: traefik
  podLabels:
    app: traefik
#%{ if use_metrics == true }
metrics:
  prometheus:
    entryPoint: metrics
#%{ endif }
logs:
  access:
    enabled: true
    format: json
  general:
    format: json
    level: INFO

kubernetes:
  namespaces:
    - default
    - kube-system

ports:
  traefik:
    port: 9999
    expose: false
    exposedPort: 9999
    protocol: TCP
  websecure:
    tls:
      enabled: true
  # metrics:
  #   port: 9100
  #   expose : false
    # expose: ${use_metrics}
#%{ if expose_azurite == true }
  azuriteblobs:
    port: 10000
    expose: true
  azuritequeues:
    port: 10001
    expose: true
  azuritetables:
    port: 10002
    expose: true
#%{ endif }
#%{ if expose_seq == true }
  seq-ingestion:
    port: 5341
    expose: true
#%{ endif }
#%{ if expose_opentelemetry == true }
  otel-grpc:
    port: 4317
    expose: true
  otel-http:
    port: 4318
    expose: true
#%{ endif }
#%{ if expose_loki == true }
  loki:
    port: 3100
    expose: true
#%{ endif }
#%{ if expose_rabbitmq == true }
  rabbitmq:
    port: 5672
    expose: true
#%{ endif }
#%{ if expose_jaeger == true }
  jaeger:
    port: 6831
    expose: true
#%{ endif }
#%{ if expose_mysql == true }
  mysql:
    port: 3306
    expose: true
#%{ endif }
#%{ if expose_mariadb == true }
  mariadb:
    port: 3307
    expose: true
#%{ endif }
#%{ if expose_postgres == true }
  postgres:
    port: 5432
    expose: true
#%{ endif }
#%{ if expose_mssql == true }
  mssql:
    port: 1433
    expose: true
#%{ endif }
#%{ if expose_mongodb == true }
  mongodb:
    port: 27017
    expose: true
#%{ endif }
#%{ if expose_oracle == true }
  oracle:
    port: 1521
    expose: true
#%{ endif }

volumes:
  - name: traefik-cert
    mountPath: "/certs"
    type: secret

ingressClass:
#   # true is not unit-testable yet, pending https://github.com/rancher/helm-unittest/pull/12
  enabled: true
  isDefaultClass: true
#   # Use to force a networking.k8s.io API Version for certain CI/CD applications. E.g. "v1beta1"
  fallbackApiVersion: "v1beta1"

ingressRoute:
  dashboard:
    enabled: true
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: web, websecure
      traefik.ingress.kubernetes.io/router.middlewares: default-redirect-http@kubernetescrd
providers:
  kubernetesCRD:
    enabled: true
    namespaces: []
  kubernetesIngress:
    enabled: true
    namespaces: []

service:
  enabled: true
#%{ if cluster-type == "k3s" }
  type: ClusterIP
#%{ endif }
#%{ if cluster-type == "kind" }
  type: NodePort
#%{ endif }
  spec:
  #   externalTrafficPolicy: Cluster
  # clusterIP: 172.18.0.2
  externalIPs: [
%{ for nodeip in node-ips ~}
    ${nodeip},
%{ endfor ~}
  ]

tls:
  certificates:
    - certFile: /certs/tls.crt
      keyFile: /certs/tls.key
  stores:
    default:
      defaultCertificate:
        certFile: /certs/tls.crt
        keyFile: /certs/tls.key

#%{ if cluster-type == "kind" }
nodeSelector:
  ingress-ready: 'true'
tolerations:
  - key: node-role.kubernetes.io/master
    operator: Equal
    effect: NoSchedule
  - key: node-role.kubernetes.io/control-plane
    operator: Equal
    effect: NoSchedule
#%{ endif }